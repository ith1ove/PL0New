=== COMPILE PL0 ===
  0 PROGRAM EX13; 
  0 VAR a, b, c, d, result; 
  1 BEGIN 
  2     // 测试前缀和后缀++/--运算符 
  2     a := 5; 
  4     b := 10; 
  6      
  6     // 测试前缀++ 
  6     WRITE(a);     // 输出: 5 
  9     ++a;          // a变成6 
 13     WRITE(a);     // 输出: 6 
 16      
 16     // 测试后缀++ 
 16     b++;          // b变成11 
 20     WRITE(b);     // 输出: 11 
 23      
 23     // 测试前缀-- 
 23     --a;          // a变成5 
 27     WRITE(a);     // 输出: 5 
 30      
 30     // 测试后缀-- 
 30     b--;          // b变成10 
 34     WRITE(b);     // 输出: 10 
 37      
 37     // 测试在表达式中的++/-- 
 37     c := 20; 
 39     d := ++c;     // 前缀++: c先变成21，然后d=21 
 45     WRITE(c);     // 输出: 21 
 48     WRITE(d);     // 输出: 21 
 51      
 51     result := c++;  // 后缀++: result=21，然后c变成22 
 57     WRITE(result);  // 输出: 21 
 60     WRITE(c);       // 输出: 22 
 63      
 63     // 测试在复杂表达式中 
 63     a := 5; 
 65     b := 10; 
 67     result := ++a + b++;  // a先变成6，b用10参与运算后变成11 
 79     WRITE(a);       // 输出: 6 
 82     WRITE(b);       // 输出: 11 
 85     WRITE(result);  // 输出: 16 (6+10) 
 88 END. 
  0 JMP 0 1
  1 INI 0 8
  2 LIT 0 5
  3 STO 0 3
  4 LIT 0 10
  5 STO 0 4
  6 LOD 0 3
  7 OPR 0 14
  8 OPR 0 15
  9 LOD 0 3
 10 LIT 0 1
 11 OPR 0 2
 12 STO 0 3
 13 LOD 0 3
 14 OPR 0 14
 15 OPR 0 15
 16 LOD 0 4
 17 LIT 0 1
 18 OPR 0 2
 19 STO 0 4
 20 LOD 0 4
 21 OPR 0 14
 22 OPR 0 15
 23 LOD 0 3
 24 LIT 0 1
 25 OPR 0 3
 26 STO 0 3
 27 LOD 0 3
 28 OPR 0 14
 29 OPR 0 15
 30 LOD 0 4
 31 LIT 0 1
 32 OPR 0 3
 33 STO 0 4
 34 LOD 0 4
 35 OPR 0 14
 36 OPR 0 15
 37 LIT 0 20
 38 STO 0 5
 39 LOD 0 5
 40 LIT 0 1
 41 OPR 0 2
 42 STO 0 5
 43 LOD 0 5
 44 STO 0 6
 45 LOD 0 5
 46 OPR 0 14
 47 OPR 0 15
 48 LOD 0 6
 49 OPR 0 14
 50 OPR 0 15
 51 LOD 0 5
 52 LOD 0 5
 53 LIT 0 1
 54 OPR 0 2
 55 STO 0 5
 56 STO 0 7
 57 LOD 0 7
 58 OPR 0 14
 59 OPR 0 15
 60 LOD 0 5
 61 OPR 0 14
 62 OPR 0 15
 63 LIT 0 5
 64 STO 0 3
 65 LIT 0 10
 66 STO 0 4
 67 LOD 0 3
 68 LIT 0 1
 69 OPR 0 2
 70 STO 0 3
 71 LOD 0 3
 72 LOD 0 4
 73 LOD 0 4
 74 LIT 0 1
 75 OPR 0 2
 76 STO 0 4
 77 OPR 0 2
 78 STO 0 7
 79 LOD 0 3
 80 OPR 0 14
 81 OPR 0 15
 82 LOD 0 4
 83 OPR 0 14
 84 OPR 0 15
 85 LOD 0 7
 86 OPR 0 14
 87 OPR 0 15
 88 OPR 0 0
~~~ RUN PL0 ~~~
5
6
11
5
10
21
21
21
22
6
11
16
~~~ END PL0 ~~~

